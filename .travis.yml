language: generic

git:
  submodules: false

matrix:
  include:
    - 
      os: linux
      dist: trusty
      sudo: required
      script: *build_swift_pm
    -
      os: osx
      osx_image: xcode8
      script: *pod_lint
    -
      os: osx
      osx_image: xcode8
      xcode_workspace: Example/TravisSandbox-Example.xcworkspace
      xcode_scheme: TravisSandbox-Example
      xcode_sdk: iphonesimulator
      env:
         - TEST_DEST="platform=iOS Simulator,OS=10.0,name=iPhone 6s"
    script: *build_xcodebuild

before_install:
  #
  # If there is a Gemfile for this os, install bundler and ask bundler to install the gems
  #
  - if [ -e Gemfile."$TRAVIS_OS_NAME" ]; then export BUNDLE_GEMFILE=Gemfile."$TRAVIS_OS_NAME" ; fi
  - if [ -e Gemfile."$TRAVIS_OS_NAME" ]; then gem install bundler ; fi
  - if [ -e Gemfile."$TRAVIS_OS_NAME" ]; then bundler install ; fi

  #
  # Linux requires downloading Swift and tools
  #
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -y ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget https://swift.org/builds/swift-3.0-release/ubuntu1404/swift-3.0-RELEASE/swift-3.0-RELEASE-ubuntu14.04.tar.gz    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar xzvf swift-3.0-RELEASE-ubuntu14.04.tar.gz    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=swift-3.0-RELEASE-ubuntu14.04/usr/bin:$PATH    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -y install clang-3.8 lldb-3.8 libicu-dev  ; fi

script_default: &build_xcodebuild
    # still happening as of sept 27, 2016: https://github.com/travis-ci/travis-ci/issues/6307
    - rvm get head || true
    - set -o pipefail
    - xcodebuild clean build -workspace "$TRAVIS_XCODE_WORKSPACE" -scheme "$TRAVIS_XCODE_SCHEME" -sdk "$TRAVIS_XCODE_SDK" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | bundler exec xcpretty
    - xcodebuild test -workspace "$TRAVIS_XCODE_WORKSPACE" -scheme "$TRAVIS_XCODE_SCHEME" -destination "$TEST_DEST" -sdk "$TRAVIS_XCODE_SDK" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | bundler exec xcpretty

script_default: &pod_lint
    - bundler exe pod lint

script_default: &build_siwft_pm
    - swift test

